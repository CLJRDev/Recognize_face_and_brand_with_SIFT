CREATE OR REPLACE PROCEDURE tp.TSP_GV_CHANGE_AOIISN(P_RET           OUT NUMBER,
                               P_MSG           OUT VARCHAR2,
                               P_ISN        IN     ISN.ISN%TYPE,
                               P_DEV        IN     DEVICE.DEVICE%TYPE,
                               P_TYPE       IN     VARCHAR2 DEFAULT 'N/A',
                               P_CAVER         OUT VARCHAR2,
                               P_CBVER         OUT VARCHAR2,
                               P_CCVER         OUT VARCHAR2,
                               P_CDVER         OUT VARCHAR2,
                               P_IAVER         OUT NUMBER,
                               P_IBVER         OUT NUMBER,
                               P_CHKDATA    IN     VARCHAR2 DEFAULT NULL,
                               P_CHKDATA2   IN     VARCHAR2 DEFAULT NULL
                              )
IS
  -----------------------------------------------------
  -- Program   : TSP_GV_CHANGE_AOIISN
  -- Version   : 1.00   2016/10/14  [�t�X������� Ver �Ш����ѻ���]
  --
  -- Parameters: P_ISN    - ISN No.
  --             P_DEV    - Device No.
  --             P_TYPE   - TYPE For each program use
  --             P_RET    - ���浲�G 0:���~ 1:���T
  --             P_MSG    - ����T��
  --             P_CAVER  - �^�Ǹ��
  --             P_CBVER  - �^�Ǹ��
  --             P_CCVER  - �^�Ǹ��
  --             P_CDVER  - �^�Ǹ��
  --
  -- Person        Date      Comments
  -- ---------   ----------  -----------------------------------------------------
  -- JACKEY      2017/04/18   COPY FROM PTWSTAND
  -- JSMES       2017/07/25   MODIFY ADD ISN COUNT CHECK
  -- JACKEY      2024/02/27   MODIFY ADD ISN_SN_UNIQUE COUNT CHECK
  -- JACKEY      2024/08/23   MODIFY ADD barcodeSN_D.SNPN=MO
  -- Lixiang     2024/10/10   Add AOILOC=1 IS AOIISN
  --
  V_SPNAME        VARCHAR2(50);
  GOERROR         EXCEPTION;
  V_ISN           ISN.ISN%TYPE;
  V_AOILOC        ISN.AOILOC%TYPE;
  VR_ISN          ISN%ROWTYPE;
  V_CNT           PLS_INTEGER;
  V_CNT1          PLS_INTEGER;
  V_N             PLS_INTEGER;
  V_N1            PLS_INTEGER;
  V_STR           VARCHAR2(100);
  V_STR1          VARCHAR2(100);
  V_SN            VARCHAR2(100);
  V_COUNT         NUMBER(6);
  VR_ITEM         ITEM%ROWTYPE;
  V_SQLSTMT       VARCHAR2(4000);
  V_AOILOCSTR     VARCHAR2(100);
  V_SNSTR         VARCHAR2(3000);
  V_SNTYPE        VARCHAR2(100);
  VR_APINI        AP_INI%ROWTYPE;
BEGIN
  V_SPNAME := '(TSP_GV_CHANGE_AOIISN)';
  IF P_TYPE = 'CHANGE_AOIISN' THEN
    V_AOILOCSTR := '';
    V_SNSTR := '';
    P_MSG := 'AP_INI,APID=CHK_IOTYPE,FNAME=CHANGE_AOIISN';
    SELECT *
      INTO VR_APINI
      FROM AP_INI
     WHERE APID = 'CHK_IOTYPE' AND FNAME = 'CHANGE_AOIISN' AND FSECTION = 'CHANGE_AOIISN';
    IF P_CHKDATA IS NULL THEN
      P_MSG := 'P_CHKDATA IS NULL ,PLS CHK!';
      RAISE GOERROR;
    END IF;
    SELECT COUNT(*)
      INTO V_CNT1
      FROM ISN
     WHERE AOIISN = P_ISN;
    V_CNT := GET_CHARCOUNT(P_CHKDATA, ';') + 1;
    IF V_CNT1 <> V_CNT THEN
      P_MSG := 'SCAN ISN COUNT IS NOT MATCH WITH AOIISN COUNT,PLS CHECK!';
      RAISE GOERROR;
    END IF;
    FOR V_N IN 1 .. V_CNT
    LOOP
      V_STR := GET_STRGET(P_CHKDATA, ';', V_N);
      V_SN := GET_STRGET(V_STR, ',', 1);
      V_AOILOC := GET_STRGET(V_STR, ',', 2);
      V_SNTYPE := NVL(GET_STRGET(V_STR, ',', 3), 'LASERSN');
      IF V_AOILOCSTR IS NULL THEN
        V_AOILOCSTR := V_AOILOC;
      ELSE
        V_AOILOCSTR := V_AOILOCSTR || ',' || V_AOILOC;
      END IF;
      IF V_SNSTR IS NULL THEN
        V_SNSTR := V_SN;
      ELSE
        V_SNSTR := V_SNSTR || ',' || V_SN;
      END IF;
      P_MSG := 'ISN AOIISN :' || P_ISN || ' AOILOC:' || V_AOILOC;
      SELECT *
        INTO VR_ISN
        FROM ISN
       WHERE AOIISN = P_ISN AND AOILOC = V_AOILOC;
      IF VR_ISN.AOISTATUS = '-1' THEN
        P_MSG := 'ISN:' || VR_ISN.ISN || ' AOISTATUS IS -1 DON''T CHANGE ISN, PLS CHK!';
        RAISE GOERROR;
      END IF;
      SELECT COUNT(*)
        INTO V_COUNT
        FROM ISN_SN_UNIQUE
       WHERE SN = V_SN AND SNTYPE = V_SNTYPE;
      IF V_COUNT = 0 THEN
        SELECT COUNT(*)
          INTO V_COUNT
          FROM BARCODESN_D
         WHERE STARTSN = V_SN AND PRNTYPE = '1' AND INSTR(';' || VR_APINI.FVALUE || ';', ';' || SNTYPE || ';') > 0;
        IF V_COUNT = 0 THEN
          P_MSG := 'SN:' || V_SN || ' IS ERROR, DON''T FOUND FROM BARCODESN_D STARTSN OR ISN_SN_UNIQUE.SN,PLS CHK!';
          RAISE GOERROR;
        END IF;
      END IF;
      P_MSG := 'ITEM:' || VR_ISN.ITEM;
      SELECT *
        INTO VR_ITEM
        FROM ITEM
       WHERE ITEM = VR_ISN.ITEM;
      SELECT COUNT(*)
        INTO V_COUNT
        FROM ISN_SN_UNIQUE
       WHERE SN = V_SN AND ITEM = VR_ISN.ITEM AND SNTYPE = V_SNTYPE;
      IF V_COUNT = 0 THEN
        SELECT COUNT(*)
          INTO V_COUNT
          FROM BARCODESN_D
         WHERE STARTSN = V_SN
           AND (SNPN = VR_ISN.ITEM OR SNPN = VR_ISN.MO)
           AND PRNTYPE = '1'
           AND INSTR(';' || VR_APINI.FVALUE || ';', ';' || SNTYPE || ';') > 0;
        IF V_COUNT = 0 THEN
          P_MSG :=
               'ISN_SN_UNIQUE.SN:'
            || V_SN
            || ' ITEM:'
            || VR_ISN.ITEM
            || ' OR BARCODESN_D STARTSN:'
            || V_SN
            || ' SNPN:'
            || VR_ISN.ITEM
            || ' OR SNPN:'
            || VR_ISN.MO
            || ' PRNTYPE=1 NOT DATA';
          RAISE GOERROR;
        END IF;
      END IF;
      IF VR_ISN.ISN <> V_SN THEN
        ISN_SN_CHANGE(VR_ISN.ISN, V_SN, P_RET, P_MSG);
        IF P_RET = 0 THEN
          RAISE GOERROR;
        END IF;
        V_STR1 := V_ISN;
        V_ISN := V_SN;
        V_SN := V_STR1;
      END IF;
      IF P_CHKDATA2 IS NOT NULL THEN
        SELECT COUNT(*)
          INTO V_N1
          FROM USER_TAB_COLUMNS
         WHERE TABLE_NAME = 'ISN' AND COLUMN_NAME = P_CHKDATA2;
        IF V_N1 = 1 THEN
          V_SQLSTMT := 'UPDATE ISN SET ' || P_CHKDATA2 || ' = :hp_SN WHERE ISN = :hp_ISN';
        ELSE
          SELECT COUNT(*)
            INTO V_N1
            FROM ISNINFO
           WHERE ISN = V_ISN;
          IF V_N1 = 0 THEN
            INSERT INTO ISNINFO(ISN)
                 VALUES (V_ISN);
          END IF;
          V_SQLSTMT := 'UPDATE ISNINFO SET ' || P_CHKDATA2 || ' = :hp_SN WHERE ISN = :hp_ISN';
        END IF;
        EXECUTE IMMEDIATE V_SQLSTMT USING V_SN, V_ISN;
      END IF;
    END LOOP;
  END IF;
  P_RET := 1;
  P_MSG := 'AOIISN:' || P_ISN || ' AOILOC:' || V_AOILOCSTR || ' SN:' || V_SNSTR || ' CHANGE OK!';
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    P_RET := 0;
    P_MSG := P_MSG || ' NOT FOUND!!' || V_SPNAME;
  WHEN GOERROR THEN
    P_RET := 0;
    P_MSG := P_MSG || V_SPNAME;
  WHEN OTHERS THEN
    P_RET := 0;
    P_MSG := P_MSG || SUBSTR(SQLERRM, 1, 200) || V_SPNAME;
END; -- Procedure TSP_GV_CHANGE_AOIISN
